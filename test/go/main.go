package main

import (
	"fmt"
	"os"
	"time"

	"golang.org/x/crypto/chacha20"
)

func main() {
	key := []byte{
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	}
	nonce := []byte{
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
	}
	c, err := chacha20.NewUnauthenticatedCipher(key, nonce)
	if err != nil {
		fmt.Printf("error: %v\n", err)
		os.Exit(1)
	}
	c.SetCounter(0)

	src := make([]byte, 1024*1024)
	dst := make([]byte, 1024*1024)

	start := time.Now()
	for i := 0; i < 1024; i++ {
		c.XORKeyStream(src, dst)
	}
	fmt.Println(time.Since(start))
}
